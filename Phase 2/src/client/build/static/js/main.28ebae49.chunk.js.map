{"version":3,"sources":["logo.svg","Results.jsx","Home.jsx","UserStore.js","Update.jsx","Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Results","props","state","data","sort","row","itemID","itemName","currentPrice","shippingPrice","count","series","manufacturer","companyName","Date","releaseDate","toDateString","console","log","this","e","setState","target","value","a","b","localeCompare","stock","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","for","name","onChange","handleChange","hidden","renderSortedList","map","x","renderRow","Component","Home","home","atr","axios","get","then","res","catch","error","cpus","storage","mobo","memory","monitor","keyboard","phone","company","i","manu","items","category","searchTerm","vendor","item","title","post","results","entires","onClick","updateCategoryAttributes","selects","entries","renderSelect","Object","keys","renderSelects","className","htmlFor","updateSearch","placeholder","submit","updateVendor","loadVendors","updateManu","loadManufacturers","updateItem","loadCategories","renderFilterGroup","advSubmit","renderHome","renderPage","extendObservable","username","localStorage","getItem","isLoggedIn","password","setItem","Update","document","getElementById","UserStore","onclick","Login","user","pass","login","updateUser","updatePass","checkCreds","to","App","useState","setItemID","setItemName","setCategory","setManufacturer","setSeries","setReleaseDate","modelNumber","setModelNumber","save","alert","firstLoad","exact","path","Axios","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oOAAe,I,8CCGMA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAMF,EAAME,KACZC,KAAM,UAEV,EAAKF,MAAMC,KAAOF,EAAME,KANT,E,sDAaTE,GACN,OACI,+BACI,6BAAKA,EAAIC,SACT,6BAAKD,EAAIE,WACT,6BAAKF,EAAIG,eACT,6BAAKH,EAAII,gBACT,6BAAKJ,EAAIK,QACT,6BAAKL,EAAIM,SACT,6BAAKN,EAAIO,eACT,6BAAKP,EAAIQ,cACT,6BAAK,IAAIC,KAAKT,EAAIU,aAAaC,sB,mCAMvCC,QAAQC,IAAIC,KAAKlB,S,mCAIRmB,GACTD,KAAKE,SAAS,CAACjB,KAAMgB,EAAEE,OAAOC,U,yCAK9B,OADAN,QAAQC,IAAIC,KAAKjB,MAAMC,KAAMgB,KAAKjB,MAAME,MACjB,cAApBe,KAAKjB,MAAME,KACHe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAGC,GAC5B,OAAOD,EAAEhB,aAAeiB,EAAEjB,gBAEJ,eAApBW,KAAKjB,MAAME,KACVe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAGC,GAC5B,OAAOA,EAAEjB,aAAegB,EAAEhB,gBAEJ,SAApBW,KAAKjB,MAAME,KACVe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAEC,GAC3B,OAAOD,EAAEjB,SAASmB,cAAcD,EAAElB,aAGd,WAApBY,KAAKjB,MAAME,KACRe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAEC,GAC3B,OAAOD,EAAEX,YAAYa,cAAcD,EAAEZ,gBAEhB,UAApBM,KAAKjB,MAAME,KACTe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAGC,GAC5B,OAAOA,EAAEE,MAAQH,EAAEG,SAEE,aAApBR,KAAKjB,MAAME,KACTe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAEC,GAC3B,OAAOD,EAAET,YAAYW,cAAcD,EAAEV,gBAEhB,cAApBI,KAAKjB,MAAME,KACTe,KAAKjB,MAAMC,KAAKC,MAAK,SAACoB,EAAEC,GAC3B,OAAOA,EAAEV,YAAYW,cAAcF,EAAET,gBAIlCI,KAAKjB,MAAMC,O,+BAIhB,IAAD,OACL,OACI,gCAGI,8BACI,sBAAKyB,MAAM,gDAAX,UAA2D,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,kDACvD,wBAAQD,MAAM,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAxJ,SAA4K,sBAAMP,MAAM,0BACxL,qBAAKA,MAAM,2BAA2BQ,GAAG,YAAzC,SACI,qBAAIR,MAAM,aAAV,UACI,oBAAIA,MAAM,kBAAV,SAA4B,oBAAGA,MAAM,WAAWC,KAAK,IAAzB,kBAAkC,sBAAMD,MAAM,UAAZ,4BAC9D,oBAAIA,MAAM,WAAV,SAAqB,mBAAGA,MAAM,WAAWC,KAAK,UAAzB,gCAKrC,sBAAKD,MAAM,iBAAX,UACI,wBACA,8BACI,0CAIJ,uBACA,sBAAKA,MAAM,oBAAX,UACI,yCACA,sBAAKA,MAAM,aAAX,UACI,uBAAOS,IAAI,cAAX,uBACA,gCACI,yBAAQD,GAAG,cAAcE,KAAK,cAAcC,SAAU,SAAAnB,GAAC,OAAI,EAAKoB,aAAapB,IAA7E,UACI,4CACA,wBAAQG,MAAM,YAAd,+BACA,wBAAQA,MAAM,aAAd,gCACA,wBAAQA,MAAM,WAAd,8BACA,wBAAQA,MAAM,YAAd,+BACA,wBAAQA,MAAM,OAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEJ,uBAAOe,KAAK,SAASG,OAAO,iBAGpC,kCACI,+BACI,yCACA,2CACA,gDACA,gDACA,uCACA,wCACA,8CACA,wCACA,iDAEHtB,KAAKuB,mBAAmBC,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,YAGzD,qBAAKhB,MAAM,gBAAX,SAA2B,mBAAGA,MAAM,uBAAuBC,KAAK,IAArC,iC,GAtIViB,aCChBC,E,kDAEjB,aAAe,IAAD,8BACV,gBACK7C,MAAQ,CAAE8C,MAAM,GACrB,EAAKC,IAAM,GAHD,E,gEAQO,IAAD,OAChBC,IAAMC,IAAI,SACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAElB,KAAMkD,EAAIlD,UAE7BmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,SACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEmC,KAAMH,EAAIlD,UAE7BmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,YACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEoC,QAASJ,EAAIlD,UAKhCmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,SACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEqC,KAAML,EAAIlD,UAE7BmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,WACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEsC,OAAQN,EAAIlD,UAE/BmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,YACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEuC,QAASP,EAAIlD,UAEhCmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,aACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEwC,SAAUR,EAAIlD,UAEjCmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,MAEhCL,IAAMC,IAAI,UACLC,MAAK,SAAAC,GACF,EAAKhC,SAAS,CAAEyC,MAAOT,EAAIlD,UAE9BmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,Q,oCAMhC,OAAKpC,KAAKjB,MAAMC,KAITgB,KAAKjB,MAAMC,KAAK4D,QAAQpB,KAAI,SAACC,EAAGoB,GACnC,OACI,wBAAgBzC,MAAOqB,EAAE/B,YAAzB,SAAuC+B,EAAE/B,aAA5BmD,MALV,O,0CAWX,OAAK7C,KAAKjB,MAAMC,KAITgB,KAAKjB,MAAMC,KAAK8D,KAAKtB,KAAI,SAACC,EAAGoB,GAChC,OACI,wBAAgBzC,MAAOqB,EAAEhC,aAAzB,SAAwCgC,EAAEhC,cAA7BoD,MALV,O,uCAWX,OAAK7C,KAAKjB,MAAMC,KAKTgB,KAAKjB,MAAMC,KAAK+D,MAAMvB,KAAI,SAACC,EAAGoB,GAEjC,OADA/C,QAAQC,IAAI0B,GAER,wBAAgBrB,MAAOqB,EAAEuB,SAAzB,SAAoCvB,EAAEuB,UAAzBH,MAPV,O,mCAaF5C,GACTD,KAAKE,SAAS,CAAE+C,WAAYhD,EAAEE,OAAOC,U,mCAG5BH,GACTD,KAAKE,SAAS,CAAEgD,OAAQjD,EAAEE,OAAOC,U,iCAG1BH,GACPD,KAAKE,SAAS,CAAE4C,KAAM7C,EAAEE,OAAOC,U,iCAIxBH,GACPD,KAAKE,SAAS,CAAEiD,KAAMlD,EAAEE,OAAOC,QAC/BN,QAAQC,IAAIC,KAAKjB,OACjBe,QAAQC,IAAI,OAAQC,KAAK8B,IAAI9B,KAAKjB,MAAMoE,S,+CAInBC,EAAOnD,GACxBD,KAAK8B,IAAI9B,KAAKjB,MAAMoE,QACpBnD,KAAK8B,IAAI9B,KAAKjB,MAAMoE,MAAQ,IAEhCnD,KAAK8B,IAAI9B,KAAKjB,MAAMoE,MAAMC,GAASnD,EAAEE,OAAOC,Q,+BAItC,IAAD,OACL2B,IAAMsB,KAAK,eAAgB,CACvBJ,WAAYjD,KAAKjB,MAAMkE,aACxBhB,MAAK,SAAAjD,GACJ,EAAKkB,SAAS,CAAE2B,MAAM,EAAOyB,QAAStE,EAAKA,UAC5CmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,Q,kCAIrB,IAAD,OACRtC,QAAQC,IAAI,uBACZD,QAAQC,IAAIC,KAAK8B,KACjBC,IAAMsB,KAAN,kBAAsBrD,KAAKjB,MAAMoE,KAAOnD,KAAKjB,MAAMoE,KAAO,IAAM,CAC5DF,WAAYjD,KAAKjB,MAAMkE,WACvBC,OAAQlD,KAAKjB,MAAMmE,OACnBJ,KAAM9C,KAAKjB,MAAM+D,KACjBK,KAAMnD,KAAKjB,MAAMoE,KACjBrB,IAAK9B,KAAK8B,IAAI9B,KAAKjB,MAAMoE,QAC1BlB,MAAK,SAAAjD,GACJ,EAAKkB,SAAS,CAAE2B,MAAM,EAAOyB,QAAStE,EAAKA,UAC5CmD,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAIqC,Q,mCAIrBgB,EAAOG,GAAU,IAAD,OAEzB,OACI,eAAC,WAAD,WACI,8BAAMH,IACN,yBAAQI,QAAS,SAAAvD,GAAC,OAAI,EAAKwD,yBAAyBL,EAAOnD,IAA3D,UACI,wBAAQG,MAAM,GAAd,oBACCmD,EAAQH,GAAO5B,KAAI,SAAAC,GAChB,OAAQ,wBAAQrB,MAAOqB,EAAf,SAAoBA,OAHpC,Y,oCAWEiC,EAASC,GAAU,IAAD,OAC5B,OACI,eAAC,WAAD,WACKD,EAAQlC,KAAI,SAAAC,GAAC,OAAI,EAAKmC,aAAanC,EAAGkC,MAD3C,S,0CAOJ,IAAK3D,KAAKjB,MAAMoE,MAA4B,WAApBnD,KAAKjB,MAAMoE,KAAmB,OAAO,KAE7D,GAAwB,QAApBnD,KAAKjB,MAAMoE,KAAgB,CAC3B,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAMsD,MACrC,OACI,8BAEKrC,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAMsD,QAK/C,GAAwB,YAApBrC,KAAKjB,MAAMoE,KAAoB,CACpC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAMuD,SACrC,OACI,8BACKtC,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAMuD,WAK/C,GAAwB,gBAApBtC,KAAKjB,MAAMoE,KAAwB,CACxC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAMwD,MACrC,OACI,8BACKvC,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAMwD,QAK/C,GAAwB,WAApBvC,KAAKjB,MAAMoE,KAAmB,CACnC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAMyD,QACrC,OACI,8BACKxC,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAMyD,UAK/C,GAAwB,YAApBxC,KAAKjB,MAAMoE,KAAoB,CACpC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAM0D,SACrC,OACI,8BACKzC,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAM0D,WAK/C,GAAwB,aAApBzC,KAAKjB,MAAMoE,KAAqB,CACrC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAM2D,UACrC,OACI,8BACK1C,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAM2D,YAK/C,GAAwB,UAApB1C,KAAKjB,MAAMoE,KAAkB,CAClC,IAAIO,EAAUG,OAAOC,KAAK9D,KAAKjB,MAAM4D,OACrC,OACI,8BACK3C,KAAK+D,cAAcL,EAAS1D,KAAKjB,MAAM4D,Y,mCAU1C,IAAD,OACT,OACI,gCAEI,8BACI,sBAAKqB,UAAU,gDAAf,UAA+D,mBAAGA,UAAU,eAAetD,KAAK,IAAjC,kDAC3D,wBAAQsD,UAAU,iBAAiBrD,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAA5J,SAAgL,sBAAMgD,UAAU,0BAChM,qBAAKA,UAAU,2BAA2B/C,GAAG,YAA7C,SACI,qBAAI+C,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SAAgC,oBAAGA,UAAU,WAAWtD,KAAK,IAA7B,kBAAsC,sBAAMsD,UAAU,UAAhB,4BACtE,oBAAIA,UAAU,WAAd,SAAyB,mBAAGA,UAAU,WAAWtD,KAAK,UAA7B,gCAKzC,sBAAKsD,UAAU,iBAAf,UACI,gCACI,0FACA,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,UAAUC,QAAQ,cAAnC,kBACA,uBAAO7C,SAAU,SAAAnB,GAAC,OAAI,EAAKiE,aAAajE,IAAI+D,UAAU,0BAA0B/C,GAAG,cAAcN,KAAK,OAAOwD,YAAY,OAAOhD,KAAK,kBAEzI,qBAAK6C,UAAU,gBAAf,SACI,wBAAQA,UAAU,uBAAuBR,QAAS,SAAAvD,GAAC,OAAI,EAAKmE,UAA5D,yBAKR,uBAEA,8BACI,mDAEJ,sBAAKJ,UAAU,oBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,QAAQ,cAAf,sBACA,8BACI,yBAAQhD,GAAG,cAAcE,KAAK,SAASC,SAAU,SAAAnB,GAAC,OAAI,EAAKoE,aAAapE,IAAxE,UACI,wBAAQG,MAAM,GAAd,oBACCJ,KAAKsE,sBAIlB,sBAAKN,UAAU,aAAf,UACI,uBAAOC,QAAQ,YAAf,2BACA,8BACI,yBAAQhD,GAAG,YAAYE,KAAK,OAAOC,SAAU,SAAAnB,GAAC,OAAI,EAAKsE,WAAWtE,IAAlE,UACI,wBAAQG,MAAM,GAAd,oBACCJ,KAAKwE,4BAKlB,sBAAKR,UAAU,aAAf,UACI,uBAAOC,QAAQ,YAAf,wBACA,8BACI,yBAAQhD,GAAG,YAAYE,KAAK,OAAOC,SAAU,SAAAnB,GAAC,OAAI,EAAKwE,WAAWxE,IAAlE,UACI,wBAAQG,MAAM,GAAd,oBACCJ,KAAK0E,yBAMlB,8BACK1E,KAAK2E,sBAGV,qBAAKX,UAAU,gBAAf,SACI,wBAAQA,UAAU,uBAAuBR,QAAS,SAAAvD,GAAC,OAAI,EAAK2E,aAA5D,0C,mCAWpB,OAAI5E,KAAKjB,MAAM8C,KACJ7B,KAAK6E,aAEL,cAAC,EAAD,CAAS7F,KAAMgB,KAAKjB,MAAMuE,Y,+BAKrC,OAAOtD,KAAK8E,iB,GApVcnD,a,+BCsBnB,M,WAvBb,aAAe,oBACboD,YAAiB/E,KAAM,CAErBgF,SAASC,aAAaC,QAAQ,QAC9BC,WAAYF,aAAaC,QAAQ,SACjCE,SAAUH,aAAaC,QAAQ,U,mDAOjCD,aAAaI,QAAQ,OAAQrF,KAAKgF,UAClCC,aAAaI,QAAQ,QAASrF,KAAKmF,YACnCF,aAAaI,QAAQ,OAAQrF,KAAKoF,Y,iCAGlC,OAAOpF,KAAKmF,e,MChBKG,E,wRAKfjF,EAAIkF,SAASC,eAAe,WAAWpF,MACvCE,EAAIiF,SAASC,eAAe,WAAWpF,MAClC,SAANC,GAAsB,SAANC,GACjBmF,EAAUT,SAAW3E,EACrBoF,EAAUL,SAAW9E,EACrBmF,EAAUN,YAAa,IAEvBM,EAAUT,SAAW,GACrBS,EAAUL,SAAW,GACrBK,EAAUN,YAAa,G,gIA2G3B,OAAGM,EAAUN,WAED,gCACI,8BACI,sBAAK1E,MAAM,gDAAX,UAA2D,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,kDACvD,wBAAQD,MAAM,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAxJ,SAA4K,sBAAMP,MAAM,0BACxL,qBAAKA,MAAM,2BAA2BQ,GAAG,YAAzC,SACI,qBAAIR,MAAM,aAAV,UACI,oBAAIA,MAAM,kBAAV,SAA4B,mBAAGA,MAAM,WAAWC,KAAK,IAAzB,oBAC5B,oBAAID,MAAM,WAAV,SAAqB,oBAAGA,MAAM,WAAWC,KAAK,UAAzB,mBAAyC,sBAAMD,MAAM,UAAZ,sCAM9E,qBAAKA,MAAM,iBAAX,SACI,sBAAKA,MAAM,oBAAX,UACQ,sBAAKA,MAAM,aAAX,UACI,uBAAOS,IAAI,aAAX,+BACA,uBAAOD,GAAG,aAAaN,KAAK,OAAOQ,KAAK,kBAE5C,sBAAKV,MAAM,aAAX,UACI,uBAAOS,IAAI,eAAX,sBACA,uBAAOD,GAAG,eAAeN,KAAK,OAAOQ,KAAK,oBAE9C,sBAAKV,MAAM,aAAX,UACI,uBAAOS,IAAI,aAAX,2BACQ,uBAAOD,GAAG,aAAaN,KAAK,OAAOQ,KAAK,kBAEpD,sBAAKV,MAAM,aAAX,UACI,uBAAOS,IAAI,aAAX,2BACQ,uBAAOD,GAAG,aAAaN,KAAK,OAAOQ,KAAK,kBAEpD,sBAAKV,MAAM,aAAX,UACI,uBAAOS,IAAI,YAAX,wBACA,8BACI,wBAAQD,GAAG,YAAYE,KAAK,OAA5B,SACI,2DAalC,cADA,CACA,kBACA,uBAAOD,IAAI,OAAX,uBACA,uBAAOP,KAAK,OAAOM,GAAG,UAAUE,KAAK,SAAQ,uBAC7C,uBAAOD,IAAI,OAAX,uBACA,uBAAOP,KAAK,OAAOM,GAAG,UAAUE,KAAK,SAAQ,uBAJ7C,wDAMA,wBAAQuE,QAAQ,UAAhB,0B,GAjL8B/D,aCAfgE,E,kDAEjB,aAAe,IAAD,8BACV,gBACK5G,MAAQ,GAFH,E,uDAKHkB,GACPD,KAAKE,SAAS,CAAE0F,KAAM3F,EAAEE,OAAOC,U,iCAGxBH,GACPD,KAAKE,SAAS,CAAE2F,KAAM5F,EAAEE,OAAOC,U,mCAI/B,IAAIwF,EAAO5F,KAAKjB,MAAM6G,KAClBC,EAAO7F,KAAKjB,MAAM8G,KAEV,SAGRD,GAFQ,YAESC,GACjB7F,KAAKE,SAAS,CAAC4F,OAAO,M,+BAIhB,IAAD,OACL,OACI,6CAEc,uBAAOnF,KAAK,OAAOQ,KAAK,WAAWC,SAAU,SAAAnB,GAAC,OAAI,EAAK8F,WAAW9F,MAAM,uBAAM,uBAF5F,aAGc,uBAAOU,KAAK,WAAWQ,KAAK,MAAMC,SAAU,SAAAnB,GAAC,OAAI,EAAK+F,WAAW/F,MAAM,uBAAM,uBACvF,uBAAOU,KAAK,SAASP,MAAM,SAASoD,QAAS,SAAAvD,GAAC,OAAI,EAAKgG,gBACtDjG,KAAKjB,MAAM+G,MAAQ,cAAC,IAAD,CAAUI,GAAG,YAAc,Y,GAlChCvE,aCuIpBwE,MA/Hf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNjH,EADM,KACEkH,EADF,OAEmBD,mBAAS,IAF5B,mBAENhH,EAFM,KAEIkH,EAFJ,OAGmBF,mBAAS,IAH5B,mBAGNpD,EAHM,KAGIuD,EAHJ,OAI2BH,mBAAS,IAJpC,mBAIN3G,EAJM,KAIQ+G,EAJR,OAKeJ,mBAAS,IALxB,mBAKN5G,EALM,KAKEiH,EALF,OAMyBL,mBAAS,IANlC,mBAMNxG,EANM,KAMO8G,EANP,OAOyBN,mBAAS,IAPlC,mBAONO,EAPM,KAOOC,EAPP,iDAyBf,sBAAAvG,EAAA,sDAC2B,MAAtBoF,EAAUT,UAA0C,MAAtBS,EAAUL,WACzCK,EAAUT,SAAU,GACpBS,EAAUL,SAAW,GACrBK,EAAUN,YAAa,EACvBM,EAAUoB,QALd,4CAzBe,kEAmCf,iBAAAxG,EAAA,WAAAA,EAAA,sDACMA,EAAIkF,SAASC,eAAe,WAAWpF,MACvCE,EAAIiF,SAASC,eAAe,WAAWpF,MAClC,SAANC,GAAsB,SAANC,GACjBwG,MAAM,aACNrB,EAAUT,SAAW3E,EACrBoF,EAAUL,SAAW9E,EACrBmF,EAAUN,YAAa,EACvBM,EAAUoB,SAEVC,MAAM,yBACNrB,EAAUT,SAAW,GACrBS,EAAUL,SAAW,GACrBK,EAAUN,YAAa,EACvBM,EAAUoB,QAdd,4CAnCe,sBAyDf,OAzDe,mCAqDfE,GAI0B,QAAtBtB,EAAUT,WAAwBS,EAAUL,SAAW,QAEvD,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,UAAZ,UAEE,cAAC,EAAD,IACA,gGACA,sBAAKjD,UAAU,OAAf,UACE,6CACA,uBAAOrD,KAAK,OAAOQ,KAAK,SAASC,SAAU,SAACnB,GAC1CoG,EAAUpG,EAAEE,OAAOC,UAErB,uBACA,+CACA,uBAAOO,KAAK,OAAOQ,KAAK,WAAWC,SAAU,SAACnB,GAC5CqG,EAAYrG,EAAEE,OAAOC,UAEX,uBACZ,8CACA,uBAAOO,KAAK,OAAOQ,KAAK,WAAWC,SAAU,SAACnB,GAC5CsG,EAAYtG,EAAEE,OAAOC,UAEX,uBACZ,kDACA,uBAAOO,KAAK,OAAOQ,KAAK,eAAeC,SAAU,SAACnB,GAChDuG,EAAgBvG,EAAEE,OAAOC,UAEf,uBACZ,4CACA,uBAAOO,KAAK,OAAOQ,KAAK,SAASC,SAAU,SAACnB,GAC1CwG,EAAUxG,EAAEE,OAAOC,UAET,uBACZ,kDACA,uBAAOO,KAAK,OAAOQ,KAAK,cAAcC,SAAU,SAACnB,GAC/CyG,EAAezG,EAAEE,OAAOC,UAEd,uBACZ,kDACA,uBAAOO,KAAK,OAAOQ,KAAK,cAAcC,SAAU,SAACnB,GAC/C2G,EAAe3G,EAAEE,OAAOC,aAG5B,wBAAQoD,QAjGC,WAEjB0D,IAAM7D,KAAK,UAAW,CACpBlE,OAAQA,EACRC,SAAUA,EACV4D,SAAUA,EACVvD,aAAcA,EACdD,OAAQA,EACRI,YAAaA,EACb+G,YAAaA,IACZ1E,MAAK,WACN6E,MAAM,gCAsFA,4BAUR,cAFA,CAEA,kBACA,uBAAO5F,IAAI,OAAX,uBACA,uBAAOP,KAAK,OAAOM,GAAG,UAAUE,KAAK,SAAQ,uBAC7C,uBAAOD,IAAI,OAAX,uBACA,uBAAOP,KAAK,OAAOM,GAAG,UAAUE,KAAK,SAAQ,uBAC7C,wBAAQqC,QAAS,kBA1HJ,0CA0HUsC,IAAvB,uBC1HaqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpF,MAAK,YAAkD,IAA/CqF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.28ebae49.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from \"react\"\r\nimport axios from \"axios\";\r\n\r\nexport default class Results extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data, // attribute\r\n            sort: 'Select'\r\n        }\r\n        this.state.data = props.data;\r\n    }\r\n\r\n    /*\r\n        DB calls were made in home.jsx, is able to be accessed in 'this.state.data' in this file\r\n    */\r\n\r\n    renderRow(row) {\r\n        return(\r\n            <tr>\r\n                <td>{row.itemID}</td>\r\n                <td>{row.itemName}</td>\r\n                <td>{row.currentPrice}</td>\r\n                <td>{row.shippingPrice}</td>\r\n                <td>{row.count}</td>\r\n                <td>{row.series}</td>\r\n                <td>{row.manufacturer}</td>\r\n                <td>{row.companyName}</td>\r\n                <td>{new Date(row.releaseDate).toDateString()}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    renderRows() {\r\n        console.log(this.props);\r\n    }\r\n\r\n    //called when sort selection changes\r\n    handleChange(e) {\r\n        this.setState({sort: e.target.value})\r\n    }\r\n\r\n    renderSortedList() {\r\n        console.log(this.state.data, this.state.sort)\r\n        if(this.state.sort === 'price-asc') {\r\n            return this.state.data.sort((a, b) => {\r\n                return a.currentPrice - b.currentPrice;\r\n            });\r\n        } else if(this.state.sort === 'price-decs') {\r\n            return this.state.data.sort((a, b) => {\r\n                return b.currentPrice - a.currentPrice;\r\n            });\r\n        } else if(this.state.sort === 'name') {\r\n            return this.state.data.sort((a,b) => {\r\n                return a.itemName.localeCompare(b.itemName)\r\n            })\r\n        }\r\n        else if(this.state.sort === 'vendor') {\r\n            return this.state.data.sort((a,b) => {\r\n                return a.companyName.localeCompare(b.companyName)\r\n            })\r\n        }else if(this.state.sort === 'stock') {\r\n            return this.state.data.sort((a, b) => {\r\n                return b.stock - a.stock;\r\n            });\r\n        }else if(this.state.sort === 'date-asc'){\r\n            return this.state.data.sort((a,b) => {\r\n                return a.releaseDate.localeCompare(b.releaseDate)\r\n            })\r\n        }else if(this.state.sort === 'date-desc'){\r\n            return this.state.data.sort((a,b) => {\r\n                return b.releaseDate.localeCompare(a.releaseDate)\r\n            })  \r\n        }\r\n        else {\r\n            return this.state.data;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\"><a class=\"navbar-brand\" href=\"#\">💻📱🖥</a>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button>\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul class=\"navbar-nav\">\r\n                                <li class=\"nav-item active\"><a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a></li>\r\n                                <li class=\"nav-item\"><a class=\"nav-link\" href=\"/update\">Update</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div class=\"main-container\">\r\n                    <div></div>\r\n                    <div>\r\n                        <p>\r\n                            asfdasd\r\n                        </p>\r\n                    </div>\r\n                    <hr />\r\n                    <div class=\"results-container\">\r\n                        <h2>Results</h2>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"filter-menu\">Sort By: </label>\r\n                            <div>\r\n                                <select id=\"filter-menu\" name=\"filter-menu\" onChange={e => this.handleChange(e)}>\r\n                                    <option>Select</option>\r\n                                    <option value=\"price-asc\">Price (ascending)</option>\r\n                                    <option value=\"price-decs\">Price (descending)</option>\r\n                                    <option value=\"date-asc\">Date (ascending)</option>\r\n                                    <option value=\"date-desc\">Date (descending)</option>\r\n                                    <option value=\"name\">Name </option>\r\n                                    <option value=\"vendor\">Vendor</option>\r\n                                    <option value=\"stock\">Stock</option>\r\n                                </select>\r\n                                <input name=\"vendor\" hidden=\"hidden\" />\r\n                            </div>\r\n                        </div>\r\n                        <table>\r\n                            <tr>\r\n                                <th>Item ID</th>\r\n                                <th>Item Name</th>\r\n                                <th>Current Price </th>\r\n                                <th>Shipping Price</th>\r\n                                <th>Stock</th>\r\n                                <th>Series</th>\r\n                                <th>Manufacturer</th>\r\n                                <th>Vendor</th>\r\n                                <th>Release Date</th>\r\n                            </tr>\r\n                            {this.renderSortedList().map(x => this.renderRow(x))}\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"btn-container\"><a class=\"btn btn-primary mb-2\" href=\"/\">Return </a></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from \"react\"\r\nimport axios from \"axios\";\r\nimport Results from \"./Results\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { home: true }\r\n        this.atr = {};\r\n    }\r\n\r\n    //calls to our database api \r\n    //values stored in this.state.whatever\r\n    componentDidMount() {\r\n        axios.get('/test')\r\n            .then(res => {\r\n                this.setState({ data: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/cpus')\r\n            .then(res => {\r\n                this.setState({ cpus: res.data }); \r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/storage')\r\n            .then(res => {\r\n                this.setState({ storage: res.data });\r\n                // now can use this.state.storage\r\n                // this.state.x = 5 <- no\r\n                // this.setState({x: 5}) <- yes\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/mobo')\r\n            .then(res => {\r\n                this.setState({ mobo: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/memory')\r\n            .then(res => {\r\n                this.setState({ memory: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/monitor')\r\n            .then(res => {\r\n                this.setState({ monitor: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/keyboard')\r\n            .then(res => {\r\n                this.setState({ keyboard: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get('/phone')\r\n            .then(res => {\r\n                this.setState({ phone: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n   \r\n    }\r\n\r\n    //called when page rendered to load dropdowns from DB \r\n    loadVendors() {\r\n        if (!this.state.data) {\r\n            return null;\r\n        }\r\n\r\n        return this.state.data.company.map((x, i) => {\r\n            return (\r\n                <option key={i} value={x.companyName}>{x.companyName}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    loadManufacturers() {\r\n        if (!this.state.data) {\r\n            return null;\r\n        }\r\n\r\n        return this.state.data.manu.map((x, i) => {\r\n            return (\r\n                <option key={i} value={x.manufacturer}>{x.manufacturer}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    loadCategories() {\r\n        if (!this.state.data) {\r\n            return null;\r\n\r\n        }\r\n\r\n        return this.state.data.items.map((x, i) => {\r\n            console.log(x)\r\n            return (\r\n                <option key={i} value={x.category}>{x.category}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    //all of these update functions are called whenever the state of a dropdown/text field changes\r\n    updateSearch(e) {\r\n        this.setState({ searchTerm: e.target.value });\r\n    }\r\n\r\n    updateVendor(e) {\r\n        this.setState({ vendor: e.target.value });\r\n    }\r\n\r\n    updateManu(e) {\r\n        this.setState({ manu: e.target.value });\r\n    }\r\n\r\n    //category\r\n    updateItem(e) {\r\n        this.setState({ item: e.target.value });\r\n        console.log(this.state)\r\n        console.log('item', this.atr[this.state.item])\r\n    }\r\n\r\n    //updates current selection of category attributes whenever selection is changed \r\n    updateCategoryAttributes(title, e) {\r\n        if(!this.atr[this.state.item]) {\r\n            this.atr[this.state.item] = {}\r\n        }\r\n        this.atr[this.state.item][title] = e.target.value;\r\n    }\r\n\r\n    //takes text in textbox, makes request to server, returns results array\r\n    submit() {\r\n        axios.post('/test-search', {\r\n            searchTerm: this.state.searchTerm\r\n        }).then(data => {\r\n            this.setState({ home: false, results: data.data });\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    //takes selections from dropdowns + textbox, makes request to server, returns results array \r\n    advSubmit() {\r\n        console.log(\"selected attributes\")\r\n        console.log(this.atr)\r\n        axios.post(`/search/${this.state.item ? this.state.item : ''}`, {\r\n            searchTerm: this.state.searchTerm,\r\n            vendor: this.state.vendor,\r\n            manu: this.state.manu,\r\n            item: this.state.item,\r\n            atr: this.atr[this.state.item]\r\n        }).then(data => {\r\n            this.setState({ home: false, results: data.data });\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    //used for item specific dropdowns\r\n    renderSelect(title, entires) { //title = name of key, entries = object that api returned \r\n        //this.updateCategoryAttributes(title, {target: { value: entires[title][0]}}); \r\n        return (\r\n            <Fragment>\r\n                <div>{title}</div>\r\n                <select onClick={e => this.updateCategoryAttributes(title, e)} >\r\n                    <option value=\"\">Select</option>\r\n                    {entires[title].map(x => {\r\n                        return (<option value={x} >{x}</option>)\r\n                    })} {/* for the key, render each item in the corresponding array (x) into the options */}\r\n                </select>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //used for item specific dropdowns\r\n    renderSelects(selects, entries) { //selects = key names\r\n        return (\r\n            <Fragment>\r\n                {selects.map(x => this.renderSelect(x, entries))} {/* for each key, call render select */}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    renderFilterGroup() {\r\n        if (!this.state.item || this.state.item === 'Select') return null; //case nothing selected in category dropdown\r\n\r\n        if (this.state.item === 'CPU') {\r\n            let selects = Object.keys(this.state.cpus) //gives name of each arr\r\n            return (\r\n                <div>\r\n\r\n                    {this.renderSelects(selects, this.state.cpus )} \r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Storage') {\r\n            let selects = Object.keys(this.state.storage)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.storage)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Motherboard') {\r\n            let selects = Object.keys(this.state.mobo)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.mobo)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Memory') {\r\n            let selects = Object.keys(this.state.memory)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.memory)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Monitor') {\r\n            let selects = Object.keys(this.state.monitor)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.monitor)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Keyboard') {\r\n            let selects = Object.keys(this.state.keyboard)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.keyboard)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.state.item === 'Phone') {\r\n            let selects = Object.keys(this.state.phone)\r\n            return (\r\n                <div>\r\n                    {this.renderSelects(selects, this.state.phone)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n\r\n        \r\n    }\r\n\r\n    renderHome() {\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\"><a className=\"navbar-brand\" href=\"#\">💻📱🖥</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item active\"><a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a></li>\r\n                                <li className=\"nav-item\"><a className=\"nav-link\" href=\"/update\">Update</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"main-container\">\r\n                    <div>\r\n                        <h3>Search item name, item id, model number, or series name:</h3>\r\n                        <div className=\"form-group mb-6\">\r\n                            <label className=\"sr-only\" htmlFor=\"inputSearch\">test</label>\r\n                            <input onChange={e => this.updateSearch(e)} className=\"form-control search-box\" id=\"inputSearch\" type=\"text\" placeholder=\"test\" name=\"user_query\" />\r\n                        </div>\r\n                        <div className=\"btn-container\">\r\n                            <button className=\"btn btn-primary mb-2\" onClick={e => this.submit()}>Search</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n                    <div>\r\n                        <h3>Advanced search</h3>\r\n                    </div>\r\n                    <div className=\"options-container\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"vendor_menu\">Vendor: </label>\r\n                            <div>\r\n                                <select id=\"vendor_menu\" name=\"vendor\" onChange={e => this.updateVendor(e)}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {this.loadVendors()}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"manu_menu\">Manufacturer:</label>\r\n                            <div>\r\n                                <select id=\"manu_menu\" name=\"manu\" onChange={e => this.updateManu(e)}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {this.loadManufacturers()}\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"type_menu\">Item Type:</label>\r\n                            <div>\r\n                                <select id=\"type_menu\" name=\"type\" onChange={e => this.updateItem(e)}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {this.loadCategories()}\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            {this.renderFilterGroup()}\r\n                        </div>\r\n\r\n                        <div className=\"btn-container\">\r\n                            <button className=\"btn btn-primary mb-2\" onClick={e => this.advSubmit()}>Advanced Search</button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPage() {\r\n        if (this.state.home) {\r\n            return this.renderHome()\r\n        } else {\r\n            return <Results data={this.state.results} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderPage()\r\n    }\r\n}","import { extendObservable } from 'mobx'\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    extendObservable(this, {\r\n\r\n      username:localStorage.getItem('user'),\r\n      isLoggedIn: localStorage.getItem('login'),\r\n      password: localStorage.getItem('pass')\r\n\r\n    })\r\n  }\r\n\r\n\r\n  save() {\r\n    localStorage.setItem('user', this.username);\r\n    localStorage.setItem('login', this.isLoggedIn);\r\n    localStorage.setItem('pass', this.password);\r\n  }\r\n  loggedIn() {\r\n    return this.isLoggedIn;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default new UserStore();\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\";\r\nimport UserStore from \"./UserStore.js\";\r\nimport { observer } from 'mobx-react'\r\nexport default class Update extends Component {\r\n\r\n\r\n\r\nasync login() {\r\n  var a = document.getElementById(\"userBox\").value;\r\n  var b = document.getElementById(\"passBox\").value;\r\n  if(a === \"1234\" && b === \"1234\") {\r\n    UserStore.username = a;\r\n    UserStore.password = b;\r\n    UserStore.isLoggedIn = true;\r\n  } else {\r\n    UserStore.username = '';\r\n    UserStore.password = '';\r\n    UserStore.isLoggedIn = false;\r\n  }\r\n}\r\n/*async componentDidMount() {\r\n  try {\r\n    let res = await fetch ('isLoggedIn', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type':'application/json'\r\n      }\r\n    });\r\n    let result = await res.json();\r\n    if(result && result.success) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = true;\r\n      UserStore.username = result.username;\r\n    }\r\n    else{\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n    }\r\n    catch (e) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  async doLogout() {\r\n    try {\r\n      let res = await fetch ('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type':'application/json'\r\n        }\r\n      });\r\n      let result = await res.json();\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n      }\r\n      catch (e) {\r\n        console.log(e)\r\n      }\r\n    }*/\r\n\r\n    render() {\r\n      /*\r\n      if(UserStore.loading) {\r\n        return (\r\n          <div className=\"app\">\r\n          <div className=\"container\">\r\n          Loading, Please Wait...\r\n          </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        if(UserStore.isLoggedIn) {\r\n          return (\r\n            <div className=\"app\">\r\n            <div className=\"container\">\r\n            Welcome {UserStore.username}\r\n            <submitButton text={'Log out'}\r\n            disabled={this.props.disabled}\r\n             onClick={() => this.logout()}\r\n            />\r\n            </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n      else {\r\n        return (\r\n          <div className=\"app\">\r\n          <div className=\"container\">\r\n          <div className = \"inputField\">\r\n            <input\r\n            className = 'input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={ (e) => this.props.onChange(e.target.value)}\r\n            />\r\n        </div>\r\n\r\n          Welcome {UserStore.username}\r\n          <div className=\"submitButton\"> </div> <button text={'Log In'}\r\n          disabled={this.props.disabled}\r\n           onClick={() => this.logout()}\r\n          />\r\n          </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n      return(\r\n      <div className=\"app\">\r\n        <div className='container'>\r\n        <div className=\"loginForm\">\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )*/\r\nif(UserStore.isLoggedIn) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\"><a class=\"navbar-brand\" href=\"#\">💻📱🖥</a>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button>\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul class=\"navbar-nav\">\r\n                                <li class=\"nav-item active\"><a class=\"nav-link\" href=\"/\">Home</a></li>\r\n                                <li class=\"nav-item\"><a class=\"nav-link\" href=\"/update\">Update<span class=\"sr-only\">(current)</span></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div class=\"main-container\">\r\n                    <div class=\"options-container\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"item_field\">New Product Name:</label>\r\n                                <input id=\"item_field\" type=\"text\" name=\"item_field\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"vendor_field\">Vendor: </label>\r\n                                <input id=\"vendor_field\" type=\"text\" name=\"vendor_field\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"manu_field\">Manufacturer:</label>\r\n                                        <input id=\"manu_field\" type=\"text\" name=\"manu_field\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"date_field\">Release Date:</label>\r\n                                        <input id=\"item_field\" type=\"date\" name=\"item_field\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"type_menu\">Item Type:</label>\r\n                                <div>\r\n                                    <select id=\"type_menu\" name=\"type\">\r\n                                        <option>Select</option>\r\n                                        {/* more options here */}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n      return(\r\n      /*https://www.w3schools.com/tags/tag_input.asp*/\r\n      <form>\r\n      <label for=\"user\">Username:</label>\r\n      <input type=\"text\" id=\"userBox\" name=\"user\"/><br></br>\r\n      <label for=\"pass\">Password:</label>\r\n      <input type=\"text\" id=\"passBox\" name=\"pass\"/><br></br>\r\n      /*https://www.w3schools.com/jsref/event_onclick.asp*/\r\n      <button onclick='login()'>Enter</button>\r\n      </form>\r\n    )}\r\n}\r\n}\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n\r\n    updateUser(e) {\r\n        this.setState({ user: e.target.value });\r\n    }\r\n\r\n    updatePass(e) {\r\n        this.setState({ pass: e.target.value });\r\n    }\r\n\r\n    checkCreds() {\r\n        var user = this.state.user;\r\n        var pass = this.state.pass;\r\n\r\n        var user1 = \"admin\"\r\n        var pass1 = \"password\"\r\n\r\n        if (user == user1 && pass == pass1) {\r\n            this.setState({login: true})\r\n        }\r\n    }\r\n\r\n        render() {\r\n            return (\r\n                <div>\r\n\r\n                    Username: <input type=\"text\" name=\"username\" onChange={e => this.updateUser(e)} /><br /><br />\r\n                    Password: <input type=\"password\" name=\"pwd\" onChange={e => this.updatePass(e)} /><br /><br />\r\n                    <input type=\"button\" value=\"Log In\" onClick={e => this.checkCreds()} />\r\n                    {this.state.login ? <Redirect to=\"/update\"/> : null}\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }","import logo from './logo.svg';\r\nimport Home from \"./Home\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Update from './Update';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Axios from 'axios'\r\nimport UserStore from \"./UserStore.js\";\r\nimport Login from \"./Login\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [itemID, setItemID] = useState('')\r\n  const [itemName, setItemName] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [manufacturer, setManufacturer] = useState('')\r\n  const [series, setSeries] = useState('')\r\n  const [releaseDate, setReleaseDate] = useState('')\r\n  const [modelNumber, setModelNumber] = useState('')\r\n\r\n\r\nconst submitItem = () =>\r\n{\r\n  Axios.post('/update', {\r\n    itemID: itemID,\r\n    itemName: itemName,\r\n    category: category,\r\n    manufacturer: manufacturer,\r\n    series: series,\r\n    releaseDate: releaseDate,\r\n    modelNumber: modelNumber,\r\n  }).then(() => {\r\n    alert(\"Successfully added item.\");\r\n  });\r\n};\r\n\r\nasync function firstLoad() {\r\n  if(UserStore.username == null || UserStore.password == null) {\r\n    UserStore.username ='';\r\n    UserStore.password = '';\r\n    UserStore.isLoggedIn = false;\r\n    UserStore.save();\r\n  }\r\n}\r\n\r\n\r\nasync function login() {\r\n  var a = document.getElementById(\"userBox\").value;\r\n  var b = document.getElementById(\"passBox\").value;\r\n  if(a === \"1234\" && b === \"1234\") {\r\n    alert(\"LOGGED IN\")\r\n    UserStore.username = a;\r\n    UserStore.password = b;\r\n    UserStore.isLoggedIn = true;\r\n    UserStore.save();\r\n  } else {\r\n    alert(\"Incorrect Credentials\")\r\n    UserStore.username = '';\r\n    UserStore.password = '';\r\n    UserStore.isLoggedIn = false;\r\n    UserStore.save();\r\n  }\r\n}\r\n\r\nfirstLoad()\r\n//alert(UserStore.isLoggedIn)\r\n\r\n\r\nif((UserStore.username == \"1234\") && (UserStore.password = \"1234\")) {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login/>\r\n        </Route>\r\n        <Route path=\"/update\">\r\n\r\n          <Update/>\r\n          <h1> Enter all of the information about what item you want to add.</h1>\r\n          <div className=\"form\">\r\n            <label>Item ID:</label>\r\n            <input type=\"text\" name=\"itemID\" onChange={(e) => {\r\n              setItemID(e.target.value)\r\n            }}/>\r\n            <br></br>\r\n            <label>Item Name:</label>\r\n            <input type=\"text\" name=\"itemName\" onChange={(e) => {\r\n              setItemName(e.target.value)\r\n            }}/>\r\n                        <br></br>\r\n            <label>Category:</label>\r\n            <input type=\"text\" name=\"category\" onChange={(e) => {\r\n              setCategory(e.target.value)\r\n            }}/>\r\n                        <br></br>\r\n            <label>Manufacturer:</label>\r\n            <input type=\"text\" name=\"manufacturer\" onChange={(e) => {\r\n              setManufacturer(e.target.value)\r\n            }}/>\r\n                        <br></br>\r\n            <label>Series:</label>\r\n            <input type=\"text\" name=\"series\" onChange={(e) => {\r\n              setSeries(e.target.value)\r\n            }}/>\r\n                        <br></br>\r\n            <label>Release date:</label>\r\n            <input type=\"text\" name=\"releaseDate\" onChange={(e) => {\r\n              setReleaseDate(e.target.value)\r\n            }}/>\r\n                        <br></br>\r\n            <label>Model Number:</label>\r\n            <input type=\"text\" name=\"modelNumber\" onChange={(e) => {\r\n              setModelNumber(e.target.value)\r\n            }}/>\r\n          </div>\r\n          <button onClick={submitItem}>SUBMIT</button>\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nelse {\r\n  return(\r\n  /*https://www.w3schools.com/tags/tag_input.asp\r\n    https://www.w3schools.com/jsref/event_onclick.asp*/\r\n  <form>\r\n  <label for=\"user\">Username:</label>\r\n  <input type=\"text\" id=\"userBox\" name=\"user\"/><br></br>\r\n  <label for=\"pass\">Password:</label>\r\n  <input type=\"text\" id=\"passBox\" name=\"pass\"/><br></br>\r\n  <button onClick={() => login()}>Enter</button>\r\n  </form>\r\n)}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}